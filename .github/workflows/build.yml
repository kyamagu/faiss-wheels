name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Apply patch
        run: git apply --directory faiss patch/faiss-rename-swigfaiss.patch
      - name: Install build dependencies
        run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.arch }}, ${{ matrix.opt_level }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: auto64
            opt_level: avx512
          - os: ubuntu-24.04-arm
            arch: aarch64
            opt_level: generic
          - os: macos-13
            arch: x86_64
            opt_level: avx2
          - os: macos-latest
            arch: arm64
            opt_level: generic
          - os: windows-latest
            arch: auto64
            opt_level: avx2
          - os: windows-11-arm
            arch: ARM64
            opt_level: generic
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      
      - name: Set up conda
        if: runner.os == 'Windows' && matrix.os != 'windows-11-arm'
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          activate-environment: ""
      
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.0.1
    
      - name: Setup MSVC for Win-ARM64
        if: matrix.os == 'windows-11-arm'
        uses: bus1/cabuild/action/msdevshell@e22aba57d6e74891d059d66501b6b5aed8123c4d  # v1
        with:
          architecture: arm64
      
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_LINUX: >
            FAISS_OPT_LEVEL=${{ matrix.opt_level }}
            FAISS_ENABLE_GPU=OFF
          CIBW_ENVIRONMENT_MACOS: >
            FAISS_OPT_LEVEL=${{ matrix.opt_level }}
            LIBOMP_USE_HIDDEN_HELPER_TASK=0
            LIBOMP_NUM_HIDDEN_HELPER_THREADS=0
            KMP_DUPLICATE_LIB_OK=TRUE
            OMP_NUM_THREADS=1
            MACOSX_DEPLOYMENT_TARGET=${{ matrix.os == 'macos-13' && '13.0' || '14.0' }}
          CIBW_ENVIRONMENT_WINDOWS: >
            FAISS_OPT_LEVEL=${{ matrix.opt_level }}
            CMAKE_PREFIX_PATH="c:\\opt"
            LIB="${LIB};c:\\opt\\lib;${CONDA}\\Library\\lib"
            CPATH="${CPATH};c:\\opt\\include;${CONDA}\\Library\\include"
            PATH="${PATH};c:\\opt\\bin"
          CIBW_BEFORE_ALL: bash scripts/build_${{ matrix.os == 'windows-11-arm' && 'Windows_ARM64' || runner.os }}.sh
          CIBW_SKIP: ${{ matrix.os == 'windows-11-arm' && 'cp39-* cp310-*' }}
          CIBW_TEST_SKIP: "*-musllinux *-win32 *-win_amd64 *-win_arm64"
          CIBW_TEST_COMMAND: >
            env -u FAISS_OPT_LEVEL pytest {project}/faiss/tests
      
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.opt_level }}
          path: ./wheelhouse/*.whl

  publish:
    name: Upload packages to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/faiss-cpu
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
