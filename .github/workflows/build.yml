name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Apply patch
        run: git apply --directory third-party/faiss patch/faiss-rename-swigfaiss.patch
      - name: Install build dependencies
        run: python -m pip install build
      - name: Build sdist
        run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: auto64
            opt_level: avx512
          - os: ubuntu-24.04-arm
            arch: aarch64
            opt_level: generic
          - os: macos-13
            arch: x86_64
            opt_level: avx2
          - os: macos-14
            arch: arm64
            opt_level: generic
          - os: windows-latest
            arch: auto64
            opt_level: avx2
          - os: windows-11-arm
            arch: ARM64
            opt_level: generic
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.1.1
      
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_LINUX: >
            FAISS_OPT_LEVEL=${{ matrix.opt_level }}
            FAISS_ENABLE_GPU=OFF
          CIBW_ENVIRONMENT_MACOS: >
            FAISS_OPT_LEVEL=${{ matrix.opt_level }}
            LIBOMP_USE_HIDDEN_HELPER_TASK=0
            LIBOMP_NUM_HIDDEN_HELPER_THREADS=0
            KMP_DUPLICATE_LIB_OK=TRUE
            OMP_NUM_THREADS=1
          CIBW_ENVIRONMENT_WINDOWS: >
            FAISS_OPT_LEVEL=${{ matrix.opt_level }}
            CMAKE_PREFIX_PATH="c:\\opt"
            LIB="${LIB};c:\\opt\\lib"
            CPATH="${CPATH};c:\\opt\\include"
            PATH="${PATH};c:\\opt\\bin"
          CIBW_BEFORE_ALL: bash scripts/build_${{ runner.os }}.sh
      
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.opt_level }}
          path: ./wheelhouse/*.whl

  publish:
    name: Upload packages to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/faiss-cpu
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
