name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Apply patch
        run: git apply --directory faiss patch/faiss-rename-swigfaiss.patch

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels Windows ARM64
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Install OpenBLAS for Windows ARM64
        shell: pwsh
        run: |
          $url = "https://github.com/OpenMathLib/OpenBLAS/releases/download/v0.3.30/OpenBLAS-0.3.30-woa64-dll.zip"
          $zipPath = "$env:RUNNER_TEMP\OpenBLAS.zip"
          $destPath = "C:\opt"
          Invoke-WebRequest -Uri $url -OutFile $zipPath
          New-Item -ItemType Directory -Force -Path $destPath
          Expand-Archive -Path $zipPath -DestinationPath $destPath -Force
          Write-Host "Contents of C:\opt:"
          Get-ChildItem -Path $destPath -Recurse
      - name: Setup MSVC for Win-ARM64
        uses: bus1/cabuild/action/msdevshell@e22aba57d6e74891d059d66501b6b5aed8123c4d  # v1
        with:
          architecture: arm64

      - name: Build wheels for Windows ARM64
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENVIRONMENT_WINDOWS: >
            FAISS_OPT_LEVEL=generic
            CMAKE_PREFIX_PATH="c:\\opt\\OpenBLAS"
            LIB="${LIB};${CMAKE_PREFIX_PATH}\\lib;${CMAKE_PREFIX_PATH}\\bin"
            CPATH="${CPATH};${CMAKE_PREFIX_PATH}\\include\\openblas"
            PATH="${PATH};${CMAKE_PREFIX_PATH}\\bin"
          CIBW_SKIP: "cp38-* cp39-win_arm64 cp310-win_arm64"
          CIBW_BEFORE_ALL: bash scripts/build_Windows_ARM64.sh
          # CIBW_TEST_COMMAND: >
          #   env -u FAISS_OPT_LEVEL pytest {project}/faiss/tests  #SciPy for Windows ARM64 is unavailable, so skip testing
            
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-windows-arm64
          path: ./wheelhouse/*.whl

  publish:
    name: Upload packages to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/faiss-cpu
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
